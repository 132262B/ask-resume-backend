server:
  port: 8080
  servlet:
    context-path: /

spring:
  jpa:
    show-sql: true # 콘솔창에 SQL 출력
    open-in-view: false # 영속성 컨텍스트의 생존 범위를 트랜잭션 범위로 한정
    properties:
      hibernate:
        format_sql: true # SQL 예쁘게 출력
        default_batch_fetch_size: 1000 # 일대다 컬렉션 조회 시 성능 최적화

  messages:
    basename: message/messages
    encoding: UTF-8

  servlet:
    multipart:
      max-file-size: 3MB # 파일 업로드 요청 시 하나의 파일 크기를 10MB 제한
      max-request-size: 3MB # 파일 업로드 요청 시 모든 파일 크기합을 10MB 제한

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  data:
    web:
      pageable:
        default-page-size: 10
        max-page-size: 100
        size-parameter: pageSize
        one-indexed-parameters: true
file:
  licensed:
    content: application/pdf

# logging 설정
logging:
  level:
    org.hibernate.type: off # 콘솔창에 조건에 바인딩되는 값 및 조회 결과 출력

# spring cloud feign client 설정
feign:
  client:
    config:
      default:
        connectTimeout: 5000 # 5초 1000(ms) x 5(s)
        readTimeout: 5000    # 5초 1000(ms) x 5(s)
      open-ai:
        readTimeout: 300000    # 5분 1000(ms) x 60(s) x 5(m)
        connectTimeout: 300000 # 5분 1000(ms) x 60(s) x 5(m)



springdoc:
  packages-to-scan: app.askresume.api
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    disable-swagger-default-url: true # swagger-default-url인 petstore html 문서 비활성화 여부
    path: demo-ui.html       # Swagger UI 경로 => localhost:8000/demo-ui.html
    tags-sorter: alpha       # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  api-docs:
    path: /v3/api-docs
    groups:
      enabled: true
  cache:
    disabled: true

# JWT Token 설정
token:
  secret: ENC(JoYvQTaEOtzggRUjebDL3gJvRwwU+gAk+AUO5Hw0p2w+Rg2pkuOlNOCYSUfsXJT71lFaiSL+7CfqXQo27fQFLyIk7RXG+TbtUWpFmoIm3bibAnYge8paDilNi33VvX3s)
  access-token-expiration-time: 900000  # 15분 1000(ms) x 60(s) x 15(m)
  refresh-token-expiration-time: 1209600000 # 2주 1000(ms) x 60 (s) x 60(m) x 24(h) x 14(d)

# Jasypt password 설정
jasypt:
  encryptor:
    password: ${PASSWORD}

# oauth
oauth:
  providers:
    google:
      client-id: ENC(Kpzzi6NP09y8n4dBVBjh1wmygBFflVlmK4T5Ox8SjSOMgZHQ4anmqWOGecPq1vpU5xO4WcngZAfTBWSV8aE5oOqs9kKGq3JayJkTI+7GT8imbfjJqwGI7A==)
      client-secret: ENC(m27Z1jgN6RUXKLoZMPFVKuUpdySPaXMeuvKKpdlG48G9eEmEzFhUuufJ8mnHK/6h)
      authorization-url: https://accounts.google.com/o/oauth2/v2/auth
      token-url: https://oauth2.googleapis.com/token
      user-info-url: https://www.googleapis.com/oauth2/v2/userinfo
      scope:
        - https://www.googleapis.com/auth/userinfo.email
        - https://www.googleapis.com/auth/userinfo.profile
    linked-in:
      client-id: ENC(QmIUlZAGU7cG4rpg3WqvNDZhX+19zYFO)
      client-secret: ENC(rAWWvcn7WujOAz7fb0eNOuz0o/aiS0/mQQa+99qmRTU=)
      authorization-url: https://www.linkedin.com/oauth/v2/authorization
      token-url: https://www.linkedin.com/oauth/v2/accessToken
      user-info-url: https://api.linkedin.com/v2/me
      email-url: https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))
      scope:
        - r_emailaddress
        - r_liteprofile

# 외 다른 내용은 GptConfig 에서 수정
external:
  openai:
    url: https://api.openai.com
    token: ENC(0cqGX1kttHKlPJJiEpjkN/ncwaG2aTEHcWnhWdm07ElZjU6i6Mw2UytcPG2b19UFfyVUegGzEOhnakQrTRD1SA==)